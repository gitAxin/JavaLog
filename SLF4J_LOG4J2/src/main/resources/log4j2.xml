<?xml version="1.0" encoding="UTF-8" ?>
<!--
log4j2配置标签首字母一般为大写
logback有些配置是使用的子文本的配置，而在log4j2中使用的是属性的方式进行配置

SYSTEM_ERR: 红色字体输出
SYSTEM_OUT: 黑色字体输出

Configuration 标签添加属性
    status=“debug” 日志框架本身的日志输出级别
    monitorInterval="5" 自动加载日志配置文件的间隔时间， 单位 秒，
-->
<Configuration xmlns="http://logging.apache.org/log4j/2.0/config"   status="off">

    <Properties>
        <Property name="logDir">D://log4j2log</Property>
<!--        <Property name="logDir">${sys:catalina.home}</Property>-->
        <Property name="fileName">log4j2.log</Property>
        <Property name="rollLogName">roll_log.log</Property>
        <!--
            文件拆分时 存放的位置
            $${date:yyyy-MM-dd} : 根据日期当天，创建一个文件夹，例如：2021-12-26，记录当前的所有日志信息（拆分出来的日志放在这个文件夹中）
            %i:序号 从0开始
         -->

        <Property name="rollFilePattern">$${date:yyyy-MM-dd}//roll_log_%d{yyyy-MM-dd-mm}_%i.log</Property>


        <Property name="pattern">%d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %-5level %logger{36} - %m%n</Property>
    </Properties>

    <Appenders>
        <!-- 控制台appender-->
        <Console name="consoleAppender" target="SYSTEM_OUT">
            <PatternLayout pattern="${pattern}"/>
        </Console>
        <!-- 文件appender-->
        <File name="fileAppender" fileName="${logDir}//${fileName}">
            <PatternLayout pattern="${pattern}"/>
        </File>

<!--
    按照指定规则来扮日志文件
    fileName: 日志文件的名字
    filePattern: 日志文件拆分后文件的命名规则

-->
        <RollingFile name="rollingFileAppender"
                     fileName="${logDir}//${rollLogName}"
                     filePattern="${logDir}//${rollFilePattern}">
            <PatternLayout pattern="${pattern}"/>

            <Policies>
                <!--在系统启动时，触发拆分规则，产生一个日志文件-->
                <OnStartupTriggeringPolicy/>
                <!--按照文件大小拆分,当fileName属性指定的文件超过该大小时，触发拆分事件-->
                <SizeBasedTriggeringPolicy size="10KB"/>
                <!--按照时间节点拆分，拆分规则就是filePattern-->
                <!--<TimeBasedTriggeringPolicy interval="1" modulate="true"/>-->
            </Policies>
            <!--在同一目录下，文件的个数限制30个，如果超出了设置的规则，则根据时间进行覆盖，新的覆盖旧的-->
            <DefaultRolloverStrategy max="30" />
        </RollingFile>

        <!--异步日志 AsyncAppender方式-->
        <Async name="asyncAppender">
            <AppenderRef ref="consoleAppender"/>
        </Async>


    </Appenders>

    <!-- 可以配置N多个Logger，包括Root和自定义Logger-->
    <Loggers>
        <Root level="trace">
            <AppenderRef ref="consoleAppender"/>
            <!--<AppenderRef ref="fileAppender"/>-->
            <!--<AppenderRef ref="rollingFileAppender"/>-->

            <!--<AppenderRef ref="asyncAppender"/>-->
        </Root>

        <!--
            异步记录日志
            includeLocation="false" 去除日志记录中的行号信息，这个行号信息非常的影响日志记录的效率（生产中都不加这个行号）
            additivity="false" 表示不继承rootLogger
        -->
        <AsyncLogger name="cn.giteasy.async" level="trace" includeLocation="false" additivity="false">
            <!--将控制台输出consoleAppender设置为异步-->
            <AppenderRef ref="consoleAppender"/>
        </AsyncLogger>

    </Loggers>
</Configuration>
